name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: queryexpnopt
        ports: ["5433:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres -d queryexpnopt"
          --health-interval=5s --health-timeout=3s --health-retries=20
    env:
      DB_URL: postgresql+psycopg2://postgres:password@localhost:5433/queryexpnopt
      RUN_DB_TESTS: 1
      WHATIF_ENABLED: 0
      PYTEST_DISABLE_PLUGIN_AUTOLOAD: 1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: pip install -U pip
      - run: pip install -e ".[dev]"
      - run: ruff check .
      - run: black --check .
      - run: psql "${{ env.DB_URL }}" -c "CREATE EXTENSION IF NOT EXISTS pgcrypto;" || true
      - run: pytest -q

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff black pytest
      - name: Lint & Format
        run: |
          ruff check .
          black --check .
      - name: Unit tests
        run: pytest -q
        env:
          RUN_DB_TESTS: ''
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short
    
    - name: Run linting (future)
      run: |
        # TODO: Add ruff/black linting in future phases
        echo "Linting will be added in future phases"
